name: Auto Update BGP Data

on:
  schedule:
    # Routing table data: updated every 2 hours
    - cron: "0 */2 * * *"
  workflow_dispatch:
    inputs:
      data_type:
        description: "Select the data type to update"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - table
          - asns
          - tags

env:
  NODE_VERSION: "20"

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install xz-utils
        run: sudo apt-get update && sudo apt-get install -y xz-utils

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.4"

      - name: Compile MMDB writer binary
        run: |
          echo "üîß Compiling Go MMDB writer binary..."
          chmod +x scripts/init-mmdbwriter.sh
          ./scripts/init-mmdbwriter.sh

          # Verify binary was created
          if [ -f "./mmdbwriter.bin" ]; then
            echo "‚úÖ MMDB writer binary compiled successfully"
            ls -la ./mmdbwriter.bin
          else
            echo "‚ùå Failed to compile MMDB writer binary"
            exit 1
          fi

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Debug script files
        run: |
          echo "üìÇ [Debug] scripts directory:"
          ls -la scripts/
          echo "üìÇ [Debug] current working directory:"
          pwd
          echo "üìÇ [Debug] Node.js version:"
          node --version
          echo "üìÇ [Debug] testing if scripts are executable:"
          chmod +x scripts/*.js

      - name: Setup auto-update branch
        run: ./scripts/setup-auto-update-branch.js

      - name: Update table data
        if: ${{ github.event.inputs.data_type == 'all' || github.event.inputs.data_type == 'table' || github.event_name == 'schedule' }}
        run: |
          ./scripts/update-and-commit-data.js table
          ./scripts/clean-old-files.js table

      - name: Update ASN data
        if: ${{ github.event.inputs.data_type == 'all' || github.event.inputs.data_type == 'asns' || (github.event_name == 'schedule' && github.event.schedule == '0 1 * * *') }}
        run: |
          ./scripts/update-and-commit-data.js asns
          ./scripts/clean-old-files.js asns

      - name: Update tags data
        if: ${{ github.event.inputs.data_type == 'all' || github.event.inputs.data_type == 'tags' || (github.event_name == 'schedule' && github.event.schedule == '0 1 * * *') }}
        run: |
          ./scripts/update-and-commit-data.js tags
          ./scripts/clean-old-files.js tags

      - name: Push changes
        run: ./scripts/push-to-auto-update.js

  # Daily job: update ASN and tag data (Archive Data)
  daily-update:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && github.event.schedule == '0 1 * * *'
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install xz-utils
        run: sudo apt-get update && sudo apt-get install -y xz-utils

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.4"

      - name: Compile MMDB writer binary
        run: |
          echo "üîß Compiling Go MMDB writer binary..."
          chmod +x scripts/init-mmdbwriter.sh
          ./scripts/init-mmdbwriter.sh

          # Verify binary was created
          if [ -f "./mmdbwriter.bin" ]; then
            echo "‚úÖ MMDB writer binary compiled successfully"
            ls -la ./mmdbwriter.bin
          else
            echo "‚ùå Failed to compile MMDB writer binary"
            exit 1
          fi

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Setup auto-update branch
        run: ./scripts/setup-auto-update-branch.js

      - name: Update ASN and tags data
        run: |
          echo "üîÑ [Daily] updating ASN and tag data..."
          ./scripts/update-and-commit-data.js asns daily
          ./scripts/clean-old-files.js asns
          ./scripts/update-and-commit-data.js tags daily
          ./scripts/clean-old-files.js tags

      - name: Push changes
        run: ./scripts/push-to-auto-update.js
